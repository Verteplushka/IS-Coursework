-- Удаление таблиц, если они существуют (для очистки и предотвращения конфликтов)
DROP TABLE IF EXISTS weight_journal, users CASCADE;
-- Таблица пользователей
CREATE TABLE IF NOT EXISTS users (
                                     user_id SERIAL PRIMARY KEY,
                                     login VARCHAR(20) NOT NULL UNIQUE,
                                     password VARCHAR(20) NOT NULL CHECK (LENGTH(password) >= 8),
                                     registration_date DATE DEFAULT CURRENT_DATE,
                                     age INT CHECK (age > 0),
                                     height REAL CHECK (height > 0),
                                     goal VARCHAR,
                                     fitness_level INT CHECK (fitness_level BETWEEN 1 AND 3),
                                     available_days INT CHECK (available_days BETWEEN 1 AND 7),
                                     role VARCHAR NOT NULL
);

-- Таблица журнала веса
CREATE TABLE IF NOT EXISTS weight_journal (
                                              weight_journal_id SERIAL PRIMARY KEY,
                                              user_id INT REFERENCES users(user_id),
                                              weight REAL NOT NULL CHECK (weight > 0),
                                              weight_date DATE
);

-- Таблица достижений
CREATE TABLE IF NOT EXISTS achievement (
                                           achievement_id SERIAL PRIMARY KEY,
                                           created_by INT REFERENCES users(user_id),
                                           name VARCHAR NOT NULL,
                                           description VARCHAR,
                                           when_created DATE
);

-- Таблица достижений пользователя
CREATE TABLE IF NOT EXISTS user_achievement (
                                                user_achievement_id SERIAL PRIMARY KEY,
                                                user_id INT REFERENCES users(user_id),
                                                achievement_id INT REFERENCES achievement(achievement_id)
);

-- Таблица упражнений
CREATE TABLE IF NOT EXISTS exercises (
                                         exercise_id SERIAL PRIMARY KEY,
                                         created_by INT REFERENCES users(user_id),
                                         when_created DATE,
                                         name VARCHAR NOT NULL,
                                         muscle_group VARCHAR NOT NULL,
                                         description VARCHAR
);

-- Таблица рабочих весов для упражнений
CREATE TABLE IF NOT EXISTS exercise_working_weight (
                                                       exercise_working_weight_id SERIAL PRIMARY KEY,
                                                       exercise_id INT REFERENCES exercises(exercise_id),
                                                       weight REAL CHECK (weight > 0),
                                                       weight_date DATE
);

-- Таблица тренировочных дней
CREATE TABLE IF NOT EXISTS training_day (
                                            training_day_id SERIAL PRIMARY KEY,
                                            user_id INT REFERENCES users(user_id),
                                            training_date DATE
);

-- Таблица связей упражнений и тренировочных дней
CREATE TABLE IF NOT EXISTS exercise_training_day (
                                                     exercise_training_day_id SERIAL PRIMARY KEY,
                                                     training_day_id INT REFERENCES training_day(training_day_id),
                                                     exercise_id INT REFERENCES exercises(exercise_id)
);

-- Таблица питания
CREATE TABLE IF NOT EXISTS meals (
                                     meal_id SERIAL PRIMARY KEY,
                                     created_by INT REFERENCES users(user_id),
                                     when_created DATE DEFAULT CURRENT_DATE,
                                     name VARCHAR NOT NULL,
                                     calories REAL CHECK (calories > 0),
                                     protein REAL CHECK (protein >= 0),
                                     fats REAL CHECK (fats >= 0),
                                     carbs REAL CHECK (carbs >= 0)
);
-- Таблица аллергий
CREATE TABLE IF NOT EXISTS allergies (
                                         allergy_id SERIAL PRIMARY KEY,
                                         created_by INT REFERENCES users(user_id),
                                         when_created DATE DEFAULT CURRENT_DATE,
                                         name VARCHAR NOT NULL UNIQUE
);

-- Таблица пользовательских аллергий
CREATE TABLE IF NOT EXISTS user_allergy (
                                            user_allergy_id SERIAL PRIMARY KEY,
                                            user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
                                            allergy_id INT REFERENCES allergies(allergy_id) ON DELETE CASCADE
);

-- Таблица связей аллергии и блюда
CREATE TABLE IF NOT EXISTS allergy_meal (
                                            allergy_meal_id SERIAL PRIMARY KEY,
                                            meal_id INT REFERENCES meals(meal_id) ON DELETE CASCADE,
                                            allergy_id INT REFERENCES allergies(allergy_id) ON DELETE CASCADE
);
-- Таблица диетических дней для админа
CREATE TABLE IF NOT EXISTS diet_day_admin (
                                              diet_day_admin_id SERIAL PRIMARY KEY,
                                              created_by INT REFERENCES users(user_id),
                                              when_created DATE DEFAULT CURRENT_DATE,
                                              name VARCHAR NOT NULL,
                                              calories REAL NOT NULL CHECK (calories > 0),
                                              portion_size REAL CHECK (portion_size > 0)
);
-- Таблица блюд для диетических дней админа
CREATE TABLE IF NOT EXISTS meal_diet_day_admin (
                                                   meal_diet_day_admin_id SERIAL PRIMARY KEY,
                                                   diet_day_admin_id INT REFERENCES diet_day_admin(diet_day_admin_id) ON DELETE CASCADE,
                                                   meal_id INT REFERENCES meals(meal_id) ON DELETE CASCADE
);


-- Таблица категорий упражнений
CREATE TABLE IF NOT EXISTS exercise_categories (
                                                   exercise_category_id SERIAL PRIMARY KEY,
                                                   category_name VARCHAR NOT NULL
);

-- Таблица дней диеты пользователя
CREATE TABLE IF NOT EXISTS diet_day_user (
                                             diet_day_user_id SERIAL PRIMARY KEY,
                                             diet_day_id INT REFERENCES diet_day_admin(diet_day_admin_id),
                                             user_id INT REFERENCES users(user_id),
                                             rate REAL CHECK (rate BETWEEN 0 AND 1),
                                             day_date DATE DEFAULT CURRENT_DATE
);

