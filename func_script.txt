CREATE OR REPLACE FUNCTION add_user(
    p_login VARCHAR,
    p_password VARCHAR,
    p_age INT,
    p_height REAL,
    p_goal VARCHAR,
    p_fitness_level INT,
    p_available_days INT,
    p_role VARCHAR
) RETURNS VOID AS $$
BEGIN
    INSERT INTO users (login, password, age, height, goal, fitness_level, available_days, role)
    VALUES (p_login, p_password, p_age, p_height, p_goal, p_fitness_level, p_available_days, p_role);
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE log_weight(
    p_user_id INT,
    p_weight REAL
)
    LANGUAGE plpgsql AS $$
BEGIN
    INSERT INTO weight_journal (user_id, weight, weight_date)
    VALUES (p_user_id, p_weight, CURRENT_DATE);
END;
$$;

CREATE OR REPLACE FUNCTION check_user_progress(p_user_id INT) RETURNS TABLE (
                                                                                weight_date DATE,
                                                                                weight REAL
                                                                            ) AS $$
BEGIN
    RETURN QUERY
        SELECT weight_date, weight
        FROM weight_journal
        WHERE user_id = p_user_id
        ORDER BY weight_date DESC;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE add_user_allergy(
    p_user_id INT,
    p_allergy_name VARCHAR
)
    LANGUAGE plpgsql AS $$
DECLARE
    v_allergy_id INT;
BEGIN
    -- Получение ID аллергии по названию
    SELECT allergy_id INTO v_allergy_id FROM allergies WHERE name = p_allergy_name;

    -- Если аллергия отсутствует, добавить новую
    IF v_allergy_id IS NULL THEN
        INSERT INTO allergies (created_by, name) VALUES (p_user_id, p_allergy_name) RETURNING allergy_id INTO v_allergy_id;
    END IF;

    -- Добавление аллергии для пользователя
    INSERT INTO user_allergy (user_id, allergy_id) VALUES (p_user_id, v_allergy_id);
END;
$$;
